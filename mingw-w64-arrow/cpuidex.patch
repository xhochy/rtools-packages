diff -aurp arrow/cpp/src/arrow/util/cpu-info.cc arrow-orig/cpp/src/arrow/util/cpu-info.cc
--- arrow/cpp/src/arrow/util/cpu-info.cc	2019-03-15 10:42:59.969260500 +0000
+++ arrow-orig/cpp/src/arrow/util/cpu-info.cc	2019-03-15 10:39:17.973126600 +0000
@@ -54,13 +54,6 @@ using boost::algorithm::contains;
 using boost::algorithm::trim;
 using std::max;
 
-void my__cpuidex(int CPUInfo[4], int function_id, int subfunction_id) {
-   __asm__ __volatile__ (
-      "cpuid"
-      : "=a" (CPUInfo [0]), "=b" (CPUInfo [1]), "=c" (CPUInfo [2]), "=d" (CPUInfo [3])
-      : "a" (function_id), "c" (subfunction_id));
-}
-
 namespace arrow {
 namespace internal {
 
@@ -157,7 +150,7 @@ bool RetrieveCPUInfo(int64_t* hardware_f
 
   if (highest_valid_id <= register_ECX_id) return false;
 
-  my__cpuidex(cpu_info.data(), register_ECX_id, 0);
+  __cpuidex(cpu_info.data(), register_ECX_id, 0);
   features_ECX = cpu_info[2];
 
   // Get highest extended id
@@ -168,7 +161,7 @@ bool RetrieveCPUInfo(int64_t* hardware_f
   if (highest_extended_valid_id >= static_cast<int>(0x80000004)) {
     model_name->clear();
     for (int i = 0x80000002; i <= static_cast<int>(0x80000004); ++i) {
-      my__cpuidex(cpu_info.data(), i, 0);
+      __cpuidex(cpu_info.data(), i, 0);
       *model_name +=
           std::string(reinterpret_cast<char*>(cpu_info.data()), sizeof(cpu_info));
     }
